name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:


  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v

    - name: Test
      run: go test -v .

    - name: Deploy to Server
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
        ARGS: "-rltgoDzvO --delete"
        SOURCE: "."
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        TARGET: ${{ secrets.REMOTE_TARGET }}

    - name: Start project
      run: |
        sshpass -p $REMOTE_PASS ssh $REMOTE_USER@$REMOTE_HOST supervisorctl restart dbdms
        echo "success"
      env:
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_PASS: ${{ secrets.REMOTE_PASS }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}

    - name: SonarQube Trigger
      run: |
        apt-get install -y wget && \
        wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.5.0.2216-linux.zip && \
        unzip sonarscanner.zip && \
        rm sonarscanner.zip && \
        mv sonar-scanner-4.5.0.2216-linux /usr/lib/sonar-scanner && ln -s /usr/lib/sonar-scanner/bin/sonar-scanner /usr/local/bin/sonar-scanner && sonar-scanner -Dsonar.projectKey=test -Dsonar.sources=. -Dsonar.host.url=http://81.70.90.102:9000 -Dsonar.login=21dab398130c140bf4e903bed76dc9b251af54fe

#   sonarQubeTrigger:
#     name: SonarQube Trigger
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@master
#       - name: SonarQube Scan
#         uses: kitabisa/sonarqube-action@master
#         with:
#           host: ${{ secrets.SONARQUBE_HOST }}
#           login: ${{ secrets.SONARQUBE_TOKEN }}
 
            
#   run-sonarqube:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@master
#       - name: SonarQube Scan
#         uses: yhkl-dev/github-action-for-sonarqube@master
#         with:
#           host: ${{ secrets.SONARQUBE_HOST }}
#           login: ${{ secrets.SONARQUBE_TOKEN }}

# #       - name: Setup sonarqube
# #         uses: warchant/setup-sonar-scanner@v3
# #       - name: Run sonarqube
# #         env:
# #           # to get access to secrets.SONAR_TOKEN, provide GITHUB_TOKEN
# #           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
# #         run: sonar-scanner
# #              -Dsonar.login=${{ secrets.SONAR_TOKEN }}
# #              -Dsonar.organization=1corp
# #              -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }}
# #              -Dsonar.projectKey=sonar-scanner-action
            

