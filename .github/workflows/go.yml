name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:


  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v

    - name: Test
      run: go test -v .

    - name: Deploy to Server
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
        ARGS: "-rltgoDzvO --delete"
        SOURCE: "."
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        TARGET: ${{ secrets.REMOTE_TARGET }}

    - name: Start project
      run: |
        sshpass -p $REMOTE_PASS ssh $REMOTE_USER@$REMOTE_HOST supervisorctl restart dbdms
        echo "success"
      env:
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_PASS: ${{ secrets.REMOTE_PASS }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}

#   sonarQubeTrigger:
#     name: SonarQube Trigger
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@master
#       - name: SonarQube Scan
#         uses: kitabisa/sonarqube-action@master
#         with:
#           host: ${{ secrets.SONARQUBE_HOST }}
#           login: ${{ secrets.SONARQUBE_TOKEN }}
          
  run-sonarqube:
    runs-on: ubuntu-latest
    steps:
    - name: SonarQube Scan
      uses: monstar-lab-oss/sonarqube-github-action@v1.0.1
      with:
        url: ${{ secrets.SONARQUBE_HOST }}
        token: ${{ secrets.SONARQUBE_TOKEN }}
